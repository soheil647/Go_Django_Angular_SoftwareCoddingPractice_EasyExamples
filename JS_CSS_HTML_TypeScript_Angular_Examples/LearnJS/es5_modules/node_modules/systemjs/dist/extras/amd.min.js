!function(t){const e=t.System.constructor.prototype,n=[[],function(){return{}}];function r(){throw Error("AMD require not supported.")}function s(){}const o=["require","exports","module"];function i(t,e){const n={},s={exports:n},o=[],i=[];let u=0;for(let e=0;e<t.length;e++){const f=t[e],c=i.length;if("require"===f)o[e]=r,u++;else if("module"===f)o[e]=s,u++;else if("exports"===f)o[e]=n,u++;else{const t=e;i.push(function(e){o[t]=e.__useDefault?e.default:e})}u&&(t[c]=f)}u&&(t.length-=u);const f=e;return[t,function(t){return t({default:n,__useDefault:!0}),{setters:i,execute:function(){s.exports=f.apply(n,o)||s.exports,n!==s.exports&&t("default",s.exports)}}}]}let u;const f=e.register;e.register=function(t,e,n){u="string"==typeof t?n:e,f.apply(this,arguments)};const c=e.instantiate;e.instantiate=function(){return p=null,c.apply(this,arguments)};const l=e.getRegister;let p,g;e.getRegister=function(){const t=l.call(this);if(t&&t[1]===u)return t;if(!p)return t||n;const e=i(p,g);return p=null,e},t.define=function(t,e,n){if("string"==typeof t){if(p){if(!System.registerRegistry)throw Error("Include the named register extension for SystemJS named AMD support.");return System.registerRegistry[t]=i(e,n),p=[],void(g=s)}System.registerRegistry&&(System.registerRegistry[t]=i([].concat(e),n)),t=e,e=n}t instanceof Array?(p=t,g=e):"object"==typeof t?(p=[],g=function(){return t}):"function"==typeof t&&(p=o,g=t)},t.define.amd={}}("undefined"!=typeof self?self:global);